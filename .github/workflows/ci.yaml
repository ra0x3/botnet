name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]

env:
  DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  REGISTRY: ghcr.io

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  bitsy-rs:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: bitsy
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-audit
          version: latest
      - run: |
          cd bitsy-rs
          cargo check --locked --workspace --all-features --all-targets
      - run: |
          cd bitsy-rs
          cargo build --locked --workspace --all-features --all-targets
      - run: |
          cd bitsy-rs
          cargo test --locked --workspace
        env:
          RUSTFLAGS: "-D warnings"

  bitsy-py:
    needs:
      - cancel-previous-runs
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: bitsy
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        run: |
          cd bitsy-py/
          pipenv install --deploy --dev

      - name: Run test suite
        run: |
          cd bitsy-py/
          # ENV=ci pipenv run test -v

  bitsy-www:
    needs:
      - cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Yarn cache
        uses: c-hive/gha-yarn-cache@v2
        with:
          directory: ./bitsy-www/bitsy

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "16.11.0"
      - run: |
          cd bitsy-www/bitsy/
          yarn install --frozen-lockfile
          CI=false yarn build

  bitsy-ios:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      

  publish-docker-images:
    runs-on: ubuntu-latest
    needs:
      - cancel-previous-runs
      - bitsy-rs
      - bitsy-py
      - bitsy-www
    strategy:
      matrix:
        job:
          - os: ubuntu-latest
            tag: ralston3/bitsy:rs-latest
            dockerfile: sysadmin/docker/Dockerfile.bitsy.rs
            context: ./bitsy-rs
          - os: ubuntu-latest
            tag: ralston3/bitsy:py-latest
            dockerfile: sysadmin/docker/Dockerfile.bitsy.py
            context: ./bitsy-py
          - os: ubuntu-latest
            tag: ralston3/bitsy:www-latest
            dockerfile: sysadmin/docker/Dockerfile.bitsy.www
            context: ./bitsy-www/bitsy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: DockerHub Login
        uses: docker/login-action@v1
        with:
          username: ralston3
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Github registry login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.job.context }}
          file: ${{ matrix.job.dockerfile }}
          tags: ${{ matrix.job.tag }}
          push: ${{ github.ref == 'refs/heads/main' }}
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
