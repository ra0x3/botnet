name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]
env:
  DASEL_VERSION: https://github.com/TomWright/dasel/releases/download/v1.24.3/dasel_linux_amd64
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUSTC_VERSION: 1.68
  REGISTRY: ghcr.io
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  IS_RELEASE: github.event_name == 'release' && github.event.action == 'published'

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  check-rustc:
    needs:
      - cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - name: Check rustc version
        run: |
          # Check rustc version, log message and exit if it doesnt match env
          CURRENT_RUSTC_VERSION=$(rustc --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | cut -c -4)
          if [ "$CURRENT_RUSTC_VERSION" != "$RUSTC_VERSION" ]; then
            echo "Rustc version ($CURRENT_RUSTC_VERSION) does not match the required version ($RUSTC_VERSION)"
            exit 1
          fi
          echo "Rustc version ($CURRENT_RUSTC_VERSION) matches the required version ($RUSTC_VERSION)"

  cargo-toml-fmt-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUSTC_VERSION }}
      - name: setup binstall
        uses: taiki-e/install-action@cargo-binstall
      - name: Install cargo-sort
        run: cargo binstall --no-confirm cargo-sort
      - name: Run cargo-sort check
        run: cargo sort -w --check packages/**/Cargo.toml

  get-workspace-members:
    needs:
      - cargo-toml-fmt-check
    runs-on: ubuntu-latest
    outputs:
      members: ${{ steps.set-members.outputs.members }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - id: set-members
        run: |
          # install dasel
          curl -sSLf "$DASEL_VERSION" -L -o dasel && chmod +x dasel
          mv ./dasel /usr/local/bin/dasel
          members=$(cat Cargo.toml | dasel -r toml -w json 'workspace.members' | jq -r ".[]" | xargs -I '{}' dasel -f {}/Cargo.toml 'package.name' | jq -R '[.]' | jq -s -c 'add')
          echo "members=$members" >> $GITHUB_OUTPUT

  cargo-clippy:
    needs:
      - cargo-toml-fmt-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: cargo clippy --all-targets --all-features
        run: cargo clippy --all-targets --all-features

  cargo-fmt:
    needs:
      - cargo-toml-fmt-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: cargo fmt --all --verbose -- --check
        run: cargo fmt --all --verbose -- --check

  cargo-verifications:
    runs-on: ubuntu-latest
    needs:
      - get-workspace-members
      - cargo-clippy
      - cargo-fmt
    strategy:
      matrix:
        package: ${{ fromJSON(needs.get-workspace-members.outputs.members) }}
        include:
          - command: build
            args: --workspace --all-features --all-targets  # TODO: add --locked

    # disallow any job that takes longer than 45 minutes
    timeout-minutes: 45
    continue-on-error: ${{ matrix.skip-error || false }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: cargo ${{ matrix.command }} -p ${{ matrix.package }} ${{ matrix.args }}
        uses: actions-rs/cargo@v1
        with:
          command: ${{ matrix.command }}
          args: ${{ matrix.args }}

  publish:
    # Only do this job if publishing a release and validations pass.
    needs:
      - cargo-verifications
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Verify tag version
        run: |
          curl -sSLf "${DASEL_VERSION}" -L -o dasel && chmod +x dasel
          mv ./dasel /usr/local/bin/dasel
          ./.github/workflows/scripts/verify_tag.sh ${{ github.ref_name }} packages/bitsy/Cargo.toml
          ./.github/workflows/scripts/verify_tag.sh ${{ github.ref_name }} packages/bitsy-core/Cargo.toml
          ./.github/workflows/scripts/verify_tag.sh ${{ github.ref_name }} packages/bitsy-macros/Cargo.toml
          ./.github/workflows/scripts/verify_tag.sh ${{ github.ref_name }} packages/bitsy-utils/Cargo.toml

      - name: Publish crates
        uses: katyo/publish-crates@v1
        with:
          publish-delay: 30000
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Notify Slack On Failure
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: '{workflow} has {status_message}'
          message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}> : <{run_url}|View Run Results>'
          footer: ''
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_NOTIFY_BUILD }}
