name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]
env:
  DASEL_VERSION: https://github.com/TomWright/dasel/releases/download/v1.24.3/dasel_linux_amd64
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  REGISTRY: ghcr.io
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  cargo-toml-fmt-check:
    needs:
      - cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - name: Install Cargo.toml linter
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-toml-lint
          version: '0.1'
      - name: Run Cargo.toml linter
        run: git ls-files | grep Cargo.toml$ | xargs --verbose -n 1 cargo-toml-lint

  get-workspace-members:
    needs:
      - cargo-toml-fmt-check
    runs-on: ubuntu-latest
    outputs:
      members: ${{ steps.set-members.outputs.members }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - id: set-members
        run: |
          # install dasel
          curl -sSLf "$DASEL_VERSION" -L -o dasel && chmod +x dasel
          mv ./dasel /usr/local/bin/dasel
          members=$(cat Cargo.toml | dasel -r toml -w json 'workspace.members' | jq -r ".[]" | xargs -I '{}' dasel -f {}/Cargo.toml 'package.name' | jq -R '[.]' | jq -s -c 'add')
          echo "members=$members" >> $GITHUB_OUTPUT

  cargo-verifications:
    runs-on: ubuntu-latest
    needs:
      - cancel-previous-runs
      - get-workspace-members
    if: github.event_name != 'release' && github.event.action != 'published'
    strategy:
      matrix:
        package: ${{ fromJSON(needs.get-workspace-members.outputs.members) }}
        include:
          - command: fmt
            args: --all --verbose -- --check
          - command: clippy
            args: --all-features --all-targets
          - command: check
            args: --all-features --locked --workspace --all-targets
          - command: build
            args: --locked --workspace --all-features --all-targets

    # disallow any job that takes longer than 45 minutes
    timeout-minutes: 45
    continue-on-error: ${{ matrix.skip-error || false }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: ${{ matrix.command }} ${{ matrix.args }}
        uses: actions-rs/cargo@v1
        with:
          command: ${{ matrix.command }}
          args: ${{ matrix.args }}

      - name: Notify if Job Fails
        uses: ravsamhq/notify-slack-action@v2
        if: always() && github.ref == 'refs/heads/master'
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: '{workflow} has {status_message}'
          message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}> : <{run_url}|View Run Results>'
          footer: ''
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_NOTIFY_BUILD }}
          RUSTFLAGS: -D warnings